<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
       http://www.springframework.org/schema/aop   
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd     
       http://www.springframework.org/schema/context   
       http://www.springframework.org/schema/context/spring-context-3.1.xsd     
       http://www.springframework.org/schema/jee   
       http://www.springframework.org/schema/jee/spring-jee-3.1.xsd      
       http://www.springframework.org/schema/lang  
       http://www.springframework.org/schema/lang/spring-lang-3.1.xsd  
       http://www.springframework.org/schema/security   
       http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- 登录页面不过滤 -->
	<http pattern="/list.do" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http access-denied-page="/accessDenied.jsp">
		<form-login login-page="/login.jsp" default-target-url="/index.jsp" />
		<!-- 访问/admin.jsp资源的用户必须具有ROLE_ADMIN的权限 -->
		<intercept-url pattern="/admin.jsp" access="ROLE_ADMIN" />
		<!-- 访问/**资源的用户必须具有ROLE_USER的权限 -->
		<intercept-url pattern="/**" access="ROLE_USER" />
		<session-management>
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" />
		</session-management>
		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了， 这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter ref="pubFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<beans:bean id="pubFilter"
		class="com.cigteam.framework.security.interceptor.PubFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="pubAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>

	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="pubUserDetailService">
			<!-- 如果用户的密码采用加密的话 <password-encoder hash="md5" /> -->
		</authentication-provider>
	</authentication-manager>

	<!-- 在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
	<beans:bean id="pubUserDetailService"
		class="com.cigteam.framework.security.support.PubUserDetailsService" />

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="pubAccessDecisionManagerBean"
		class="com.cigteam.framework.security.support.PubAccessDecisionManager" />

	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource"
		class="com.cigteam.framework.security.support.PubInvocationSecurityMetadataSource" />

</beans:beans>  